FROM python:3.10-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    wget \
    curl \
    gnupg \
    unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install the latest yt-dlp version directly
RUN wget -O /usr/local/bin/yt-dlp https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp && \
    chmod a+rx /usr/local/bin/yt-dlp && \
    # Verify installation
    yt-dlp --version

# Create optimization directories
RUN mkdir -p /root/.cache/yt-dlp && \
    chmod -R 777 /root/.cache/yt-dlp && \
    mkdir -p /app/tmp && chmod 777 /app/tmp

# Copy only necessary files for CLI functionality
COPY audio_instruction/ /app/audio_instruction/
COPY pyproject.toml setup.py README.md /app/

# Install the package and dependencies
RUN pip install --no-cache-dir -e .

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV YDL_SOCKET_TIMEOUT=60
ENV YDL_FORCE_IPV4=1

# Create a simple entrypoint script for CLI operations
RUN echo '#!/bin/bash\n\
    set -e\n\
    \n\
    if [[ -f "$1" ]]; then\n\
    input_dir=$(dirname "$1")\n\
    input_file=$(basename "$1")\n\
    filename_base="${input_file%.*}"\n\
    \n\
    # Link input file to working directory\n\
    ln -sf "$1" "/app/$input_file"\n\
    \n\
    # Run CLI tool\n\
    cd /app\n\
    audio-instruction "/app/$input_file"\n\
    \n\
    # Copy output back to input directory\n\
    cp "/app/${filename_base}.mp3" "$input_dir/${filename_base}.mp3"\n\
    echo "Generated audio saved to $input_dir/${filename_base}.mp3"\n\
    else\n\
    # Pass args directly to CLI\n\
    exec audio-instruction "$@"\n\
    fi' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Set the entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]

# Default to showing help if no arguments are provided
CMD ["--help"] 